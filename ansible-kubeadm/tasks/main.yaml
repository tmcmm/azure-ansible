- hosts: "masters, workers"
  remote_user: azureuser
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  vars_files:
  - ../default/main.yml
  vars:
    kubernetes_allow_pods_on_master: true

  tasks:
  - name: Include OS-specific variables.
    include_vars: "../vars/{{ ansible_os_family }}.yaml"

  - name: Make the Swap inactive
    command: swapoff -a 

  - name: disable swap
    become: yes
    become_method: sudo
    shell: |
            swapoff -a
            sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
      
  - name: create the kube user account
    user: name=kube append=yes state=present createhome=yes shell=/bin/bash

  - name: allow 'kube' to use sudo without needing a password
    lineinfile:
      dest: /etc/sudoers
      line: 'kube ALL=(ALL) NOPASSWD: ALL'
      validate: 'visudo -cf %s'

  - name: set up authorized keys for the kube user
    authorized_key: user=kube key="{{item}}"
    with_file:
      - ~/.ssh/id_rsa.pub

  - include_tasks: setup-RedHat.yaml
    when: ansible_os_family == 'RedHat'

  - include_tasks: setup-Debian.yaml
    when: ansible_os_family == 'Debian'

  - name: Create containerd config file
    file:
      path: "/etc/modules-load.d/containerd.conf"
      state: "touch"

  - name: Add conf for containerd
    blockinfile:
      path: "/etc/modules-load.d/containerd.conf"
      block: |
             overlay
             br_netfilter

  - name: modprobe
    become: yes
    become_method: sudo
    shell: |
           modprobe overlay
           modprobe br_netfilter

  - name: Set system configurations for Kubernetes networking
    file:
      path: "/etc/sysctl.d/99-kubernetes-cri.conf"
      state: "touch"

  - name: Add conf for containerd
    blockinfile:
      path: "/etc/sysctl.d/99-kubernetes-cri.conf"
      block: |
             net.bridge.bridge-nf-call-iptables = 1
             net.ipv4.ip_forward = 1
             net.bridge.bridge-nf-call-ip6tables = 1

  - name: Apply new settings
    become: yes
    become_method: sudo
    command: sysctl --system

  - name: Install Kubernetes packages.
    package:
      name: "{{ item.name | default(item) }}"
      state: "{{ item.state | default('present') }}"
    notify: restart kubelet
    with_items: "{{ kubernetes_packages }}"

  - name: install containerd
    become: yes
    become_method: sudo
    shell: |
           apt-get update && sudo apt-get install -y containerd.io
           mkdir -p /etc/containerd
           containerd config default | sudo tee /etc/containerd/config.toml
           systemctl restart containerd
    when: ansible_os_family == 'Debian'

  - name: install containerd
    become: yes
    become_method: sudo
    shell: |
           yum update && sudo yum install -y containerd
           mkdir -p /etc/containerd
           containerd config default | sudo tee /etc/containerd/config.toml
           systemctl restart containerd
    when: ansible_os_family == 'RedHat'
  
  - include_tasks: sysctl-setup.yaml

  - name: Ensure kubelet is started and enabled at boot.
    service:
      name: kubelet
      state: started
      enabled: true

  - name: Check if Kubernetes has already been initialized.
    stat:
      path: /etc/kubernetes/admin.conf
    register: kubernetes_init_stat

# Set up master.
  - include_tasks: master-setup.yaml
    when: kubernetes_role == 'master'

# Set up nodes.
  - name: Get the kubeadm join command from the Kubernetes master.
    command: kubeadm token create --print-join-command
    # changed_when: false
    when: kubernetes_role == 'master'
    register: kubernetes_join_command_result

  - name: Set the kubeadm join command globally.
    set_fact:
      kubernetes_join_command: >
        {{ kubernetes_join_command_result.stdout }}
        {{ kubernetes_join_command_extra_opts }}
    #when: kubernetes_join_command_result.stdout is defined
    when: kubernetes_join_command_result is changed
    delegate_to: "{{ item }}"
    delegate_facts: true
    with_items: "{{ groups['all'] }}"
  
  - include_tasks: node-setup.yaml
    when: kubernetes_role == 'node'

  - name: Change Role on the worker nodes.
    become: yes
    become_user: kube
    run_once: true 
    ignore_errors: yes
    command: "kubectl label nodes worker-02 worker-03 node-role.kubernetes.io/worker=worker"
    
  
  - name: Copy metric serverl yaml file with owner and permission.
    ansible.builtin.copy:
      src: metric-server.yaml
      dest: /home/kube/metric-server.yaml
      owner: kube
      group: kube
      mode: u=rw,g=r,o=r
    when: kubernetes_role == 'master'

  - name: Install Metric Server
    become: yes
    become_user: kube
    run_once: true
    command: "kubectl apply -f /home/kube/metric-server.yaml" 
    when: kubernetes_role == 'master' 
    
