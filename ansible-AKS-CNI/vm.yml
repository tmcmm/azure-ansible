  - name: Create resource group
    azure_rm_resourcegroup:
      name: "{{ aks_resource_group }}"
      location: "{{ aks_rg_location }}"
    register: resource

  - name: Create VM ssh subnet
    azure_rm_subnet:
      resource_group: "{{ aks_resource_group }}"
      name: "{{ vm_subnet_name }}"
      address_prefix: "{{ vm_subnet_address_prefixes }}"
      virtual_network: "{{ appgtw_vnet_name }}"
    register: subnet_vm_network

  - name: Create public IP address
    azure_rm_publicipaddress:
      resource_group: "{{ aks_resource_group }}"
      allocation_method: Static
      name: "{{ network_vm_public_ip_name }}"
    register: output_ip_address

  - name: Sleep for 100 seconds while creating the public ip_address
    wait_for:
      timeout: 100
    delegate_to: localhost
    when: output_ip_address is changed

  - name: Dump public IP for VM which will be created
    debug:
      msg: "The public IP of your VM is {{ output_ip_address.state.ip_address }}."
      
  - name: Create Network Security Group that allows SSH from your provider public IP 
    azure_rm_securitygroup:
      resource_group: "{{ aks_resource_group }}"
      name: "{{ network_security_group_name }}"
      rules:
        - name: SSH
          protocol: Tcp
          destination_port_range: 22
          source_port_range: "*"
          access: Allow
          priority: 1001
          direction: Inbound
          source_address_prefix: "{{ network_provider_public_ip }}"
          destination_address_prefix: "{{ vm_subnet_address_prefixes }}"
          description: "Allow from MY ISP IP"
 
  - name: Create virtual network interface card
    azure_rm_networkinterface:
      resource_group: "{{ aks_resource_group }}"
      name: "{{ vm_nic_name }}"
      virtual_network: "{{ appgtw_vnet_name }}"
      subnet: "{{ vm_subnet_name }}"
      public_ip_name: "{{ network_vm_public_ip_name }}"
      security_group: "{{ network_security_group_name }}"
    register: nic_card

#  - name: List all VM's from publisher available in that region
#    community.azure.azure_rm_virtualmachineimage_info:
#      location: "{{ resource_group_location }}"
#      publisher: "{{ vm_publisher }}"
#    register: list_vm

  - name: Create VM
    azure_rm_virtualmachine:
      resource_group: "{{ aks_resource_group }}"
      name: "{{ vm_name }}"
      tags: "{{ vm_tags }}"
      vm_size: "{{ vm_size }}"
      admin_username: "{{ vm_admin_username }}"
      short_hostname: "{{ vm_hostname }}"
      ssh_password_enabled: false
      ssh_public_keys:
        - path: "{{ ssh_keys_path_dest }}"
          key_data: "{{ public_ssh_key }}"
      network_interfaces: "{{ vm_nic_name }}"
      image:
        offer: "{{ vm_offer }}"
        publisher: "{{ vm_publisher }}"
        sku: "{{ vm_sku }}"
        version: "{{ vm_version }}"
      data_disks:
        - lun: 1
          disk_size_gb: "{{ vm_disk_size }}"
          managed_disk_type: "{{ vm_disk_managed_type }}"
          storage_container_name: "{{ vm_disk_storage_container_name }}"
    register: vm01

  - name: Sleep for 100 seconds while creating the VM
    wait_for:
      timeout: 100
    delegate_to: localhost

  - name: Copy to VM private key of the Cluster
    vars:
      vm_private_key: "{{ lookup('file', '~/.ssh/id_rsa') }}"
    command: "scp -o StrictHostKeyChecking=no -i {{ vm_private_key }} {{ vm_admin_username }}@{{ output_ip_address.state.ip_address }}:/home/{{ vm_admin_username }}/id_rsa"

  - name: Change permissions on the AKS private key
    vars:
      vm_private_key: "{{ lookup('file', '~/.ssh/id_rsa') }}"
    command: "ssh -i {{ vm_private_key }} {{ vm_admin_username }}@{{ output_ip_address.state.ip_address }} chmod 600 /home/{{ vm_admin_username }}/id_rsa "